def material(c)
{
  Materials.uniform( [ "ambient": Colors.white() * 0.1,
                       "diffuse": c * 0.8,
                       "specular": Colors.white() * 0.5,
                       "specular_exponent": 10,
                       "reflectivity": 0.0,
                       "transparency": 0,
                       "refractive_index": 0 ] )
}

def scene_at(now)
{
  var camera = Cameras.perspective( [ "eye": pos(0,0,5),
                                      "look_at": pos(0,0,0) ] )

  var p1 = Pos.spherical(1, degrees(0), degrees(90))
  var p2 = Pos.spherical(1, degrees(60), degrees(-30))
  var p3 = Pos.spherical(1, degrees(180), degrees(-30))
  var p4 = Pos.spherical(1, degrees(-60), degrees(-30))

  var root = union( [ decorate( material(Colors.red()), triangle(p1, p2, p3) ),
                     decorate( material(Colors.green()), triangle(p1, p3, p4) ),
                     decorate( material(Colors.blue()), triangle(p1, p4, p2) ),
                     decorate( material(Colors.yellow()), triangle(p2, p4, p3) ) ] )

  var lights = [ Lights.omnidirectional( pos(0, 4, 2), Colors.white() ), Lights.omnidirectional( pos(0, -4, 2), Colors.white() ) ]
  
  var x = Animations.animate(0, 360, seconds(6))
  var y = Animations.animate(0, 360, seconds(2))
  var z = Animations.animate(0, 360, seconds(3))
   
  create_scene(camera, rotate_around_x(degrees(x[now]), rotate_around_y(degrees(y[now]), rotate_around_z(degrees(z[now]), root))), lights)
}

var raytracer   = Raytracers.v6()

var renderer    = Renderers.standard( [ "width": 500,
                                       "height": 500,
                                       "sampler": Samplers.multijittered(2),
                                       "ray_tracer": raytracer ] )

pipeline( scene_animation(scene_at, seconds(6)),
          [ Pipeline.animation(15),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout() ] )