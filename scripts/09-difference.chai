// resolution
var res = 370

def scene_at(now)
{
  // Create animation: x goes from -10 to +10 in 5 seconds
  var x = Animations.animate(-6, 5, seconds(5))

  // Create camera 
  var camera = Cameras.perspective( [ "eye": pos(x[now]+2, x[now]+2, x[now]+7), "look_at": pos(0, 0, 0), "up": vec(0, 2, 0).normalized() ] )

  // Create material
  var material = Materials.uniform( [ "ambient": Colors.white() * 0.1, "diffuse": Colors.white() * 0.8, "specular": Colors.white(), "specular_exponent": 100 ] )
  
  // Create primitives
  var sphere = decorate(material, sphere())
  
  // Create root union
  var holes = union( [ translate(vec(0,1.75,0), sphere),
           translate(vec(0,-1.75,0), sphere),
           translate(vec(0,0,1.75), sphere),
           translate(vec(0,0,-1.75), sphere),
           translate(vec(1.75,0,00), sphere),
           translate(vec(-1.75,0,0), sphere) ] )
  
  var intersection = difference( [ sphere, holes ] )


  // Create list of lights
  var lights = [ Lights.omnidirectional( pos(5, 5, 5), Colors.white() ), Lights.omnidirectional( pos(-5, -5, 0), Colors.white() ) ]

  create_scene(camera, intersection, lights)
}

var renderer = Renderers.standard( [ "width": res, "height": res, "sampler": Samplers.single(), "ray_tracer": Raytracers.v6() ] )
pipeline( scene_animation(scene_at, seconds(5)), [ Pipeline.animation(15), Pipeline.renderer(renderer), Pipeline.wif(), Pipeline.base64(), Pipeline.stdout() ] )