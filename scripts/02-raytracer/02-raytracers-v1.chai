// Camera
var camera = Cameras.perspective( [ "eye": pos(0,0,5), "look_at": pos(0,0,0) ] )

// Materials
var floor_material        = Materials.uniform( [ "ambient": Colors.white() ] )
var left_wall_material    = Materials.uniform( [ "ambient": Colors.red()   ] )
var right_wall_material   = Materials.uniform( [ "ambient": Colors.green() ] )
var back_wall_material    = Materials.uniform( [ "ambient": Colors.blue()  ] )
var ceiling_material      = floor_material
  
var sphere_material       = Materials.uniform( [ "ambient": Colors.blue() * 0.5 ] )
var small_sphere_material = Materials.uniform( [ "ambient": Colors.white() ] )
  
// Primitives
var primitives = []

primitives.push_back( translate( vec(0,-2,0), decorate( floor_material,      xz_plane() ) ) )
primitives.push_back( translate( vec(0,2,0),  decorate( ceiling_material,    xz_plane() ) ) )
primitives.push_back( translate( vec(-2,0,0), decorate( left_wall_material,  yz_plane() ) ) )
primitives.push_back( translate( vec(2,0,0),  decorate( right_wall_material, yz_plane() ) ) )
primitives.push_back( translate( vec(0,0,-2), decorate( back_wall_material,  xy_plane() ) ) )
  
primitives.push_back( translate( vec(1,0,-1),  decorate( sphere_material, scale( 0.5, 0.5, 0.5, sphere() ) ) ) )
primitives.push_back( translate( vec(-1,0,1),  decorate( sphere_material, scale( 0.5, 0.5, 0.5, sphere() ) ) ) )
primitives.push_back( decorate( small_sphere_material, scale( 0.25, 0.25, 0.25, sphere() ) ) )
 
// Create scene
var root = union(primitives)
var lights = [ Lights.omnidirectional( pos(0,1.9,0), Colors.white() ) ]

var scene = create_scene(camera, root, lights)

// Render
var res = 500
var renderer = Renderers.standard( [ "width": res, "height": res, "sampler": Samplers.multijittered(2), "ray_tracer": Raytracers.v1() ] )
pipeline( scene, [ Pipeline.renderer(renderer), Pipeline.wif(), Pipeline.base64(), Pipeline.stdout() ] )