// resolution
var res = 370
  

def scene_at(now)
{
  // Create animation: x goes from -10 to +10 in 5 seconds
  var x = Animations.animate(-10, 10, seconds(5))

  // Create camera 
  var camera = Cameras.perspective( [ "eye": pos(x[now]+10, x[now]+10, 7), "look_at": pos(0, 0, 0), "up": vec(0, 1, 0).normalized() ] )

  // Create materials
  var white = Materials.uniform( [ "ambient": Colors.white() * 0.2, "diffuse": Colors.white() * 0.9 ] )
  var black = Materials.uniform( [ "ambient": Colors.black() * 0.2, "diffuse": Colors.white() * 0.3 ] )
  
  var xy_plane_material = Materials.checkered2d(1, black, white)
  var yz_plane_material = Materials.checkered2d(1, white, black)

  var sphere_material = Materials.uniform( [ "ambient": 0.1 * Colors.white(), "diffuse": Colors.white() * 0.9 ] ) 
  
  // Create primitives
  var xyplane = translate(vec(0, 0, -2), decorate(xy_plane_material, xy_plane()))
  var yzplane = translate(vec(-2, 0, 0), decorate(yz_plane_material, yz_plane()))
   
  var sphere = translate(vec(0, 2, 0), decorate(sphere_material, sphere()))  
  
  // Create root union
  var shapes = [ sphere, xyplane, yzplane ]
  var root_union = union(shapes)

  // Create list of lights
  var lights = [ Lights.omnidirectional(pos(1, 4, 0), Colors.white()) ]

  create_scene(camera, root_union, lights)
}

var renderer = Renderers.standard( [ "width": res, "height": res, "sampler": Samplers.single(), "ray_tracer": Raytracers.v2() ] )

pipeline( scene_animation(scene_at, seconds(3)),
          [ Pipeline.animation(15),
            Pipeline.renderer(renderer),
            Pipeline.wif(),
            Pipeline.base64(),
            Pipeline.stdout() ] )