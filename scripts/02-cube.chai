// resolution
var res = 170

def scene_at(now)
{
  // Create animation: x goes from -10 to +10 in 5 seconds
  var x = Animations.animate(0, 10, seconds(5))

  // Create camera
  var camera = Cameras.perspective( [ "eye": pos(x[now]+10, x[now]+10, 7), "look_at": pos(0, 0, 0), "up": vec(0, 1, 0).normalized() ] )

  // Create material
  var white = Materials.uniform( [ "ambient": Colors.white() * 0.1, "diffuse": Colors.white() * 0.2, "specular": Colors.white() * 0.8, "specular_exponent": 10, "reflectivity": 0.2 ] )
  var black = Materials.uniform( [ "ambient": Colors.black() * 0.1, "diffuse": Colors.black() * 0.2, "specular": Colors.white() * 0.8, "specular_exponent": 10, "reflectivity": 0.2 ] )
  
  var xy_plane_material = Materials.checkered2d(1, black, white)
  var xz_plane_material = Materials.checkered2d(1, white, black)
  
  var sphere1_material = Materials.uniform( [ "ambient": Colors.green() * 0.1, "diffuse": Colors.green() * 0.2, "specular": Colors.white() * 0.8, "specular_exponent": 10, "reflectivity": 0.3 ] )
  var sphere2_material = Materials.uniform( [ "ambient": Colors.yellow() * 0.1, "diffuse": Colors.yellow() * 0.2, "specular": Colors.white() * 0.8, "specular_exponent": 10, "reflectivity": 0.3 ] )     
  var sphere3_material = Materials.uniform( [ "ambient": Colors.white() * 0.1, "diffuse": Colors.white() * 0.2, "specular": Colors.white() * 0.8, "specular_exponent": 10, "transparency": 0.8, "refractive_index": 10 ] )     
  var sphere4_material = Materials.uniform( [ "ambient": Colors.blue() * 0.1, "diffuse": Colors.blue() * 0.2, "specular": Colors.white() * 0.8, "specular_exponent": 10, "reflectivity": 0.3 ] )     
  var sphere5_material = Materials.uniform( [ "ambient": Colors.red() * 0.1, "diffuse": Colors.red() * 0.2, "specular": Colors.white() * 0.8, "specular_exponent": 10, "reflectivity": 0.3 ] )     

  // Create primitives 
  var xyplane = translate(vec(0, 0, -2), decorate(xy_plane_material, xy_plane()))
  var xzplane = translate(vec(0, -2, 0), decorate(xz_plane_material, xz_plane()))
     
  var cube1 = translate(vec(0, 5, 3), decorate(sphere1_material, cube()))
  //var sphere2 = translate(vec(3, 2, 0), decorate(sphere2_material, sphere()))
  //var sphere3 = translate(vec(2, 3, 3), decorate(sphere3_material, sphere()))
  //var sphere4 = translate(vec(-1, 4, 2), decorate(sphere4_material, sphere()))
  //var sphere5 = translate(vec(-3, 5, 0), decorate(sphere5_material, sphere()))
  
  // Create root union
  var shapes = [ cube1, 
  //sphere2, sphere3, sphere4, sphere5,
  xyplane, xzplane ]
  var root_union = union(shapes)

  // Create list of lights 
  var lights = [ //Lights.omnidirectional(pos(1, 7, 0), Colors.white())
  Lights.omnidirectional(pos(4, 10, 0), Colors.red() * 0.5) 
  ]

  create_scene(camera, root_union, lights)
}

var renderer = Renderers.standard( [ "width": res, "height": res, "sampler": Samplers.single(), "ray_tracer": Raytracers.v6() ] )
pipeline( scene_animation(scene_at, seconds(5)), [ Pipeline.animation(15), Pipeline.renderer(renderer), Pipeline.wif(), Pipeline.base64(), Pipeline.stdout() ] )